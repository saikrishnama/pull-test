
pipeline {
    agent any
	parameters {
	
		string(name: 'Version', defaultValue: '1.0.0-SNAPSHOT', description: 'Specify the version.')
	}
// environment {
//     def DEPLOYMENT_DIR = 'pull-test'
// }
    stages {
        stage('SCM:Checkout') {
            steps {
                echo 'Hello World-1'
                envSetup()
            }
        }
	stage('RunTerraformInit') {
            steps {
                RunTerraformInit()
		println "Version: ${params.Version}"
            }
        }
        	stage('TerraformPlan') {
            steps {
                TerraformPlan()
		println "Version: ${params.Version}"
            }
        }
        stage('TerraformApply') {
            steps {
                approvalbuild()
                TerraformApply()
		println "Version: ${params.Version}"
            }
        }
    }
}
def envSetup() {
    deleteDir()     // delete jenkins working dir
    checkout scm    // clones the git repository
}
def RunTerraformInit() {
    echo '[Jenkinsfile] Initilizing Terr.'
            sh """
            terraform init
          
        """
    
}
def TerraformPlan() {
    echo '[Jenkinsfile] Initilizing terraform Plan progress.'
    // dir("${DEPLOYMENT_DIR}")
     
        sh """
	    echo "print"
           # terraform plan -out=plan.out -no-color"
          
        """
    }



def TerraformApply() {
    echo '[Jenkinsfile] Initilizing terraform apply in progress.'
    
        sh """
            #terraform -out=plan.out -no-color"
          
        """
    
}

def approvalbuild() {
   // when {
     //   beforeInput True
        // datas.flash.envts.contai
   // }
   input message: 'Proceed or Abort', submitter: 'shaikch'
   

}
